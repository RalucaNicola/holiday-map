var S=Object.defineProperty,g=Object.defineProperties;var _=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var x=Object.prototype.hasOwnProperty,R=Object.prototype.propertyIsEnumerable;var l=(e,t,r)=>t in e?S(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,c=(e,t)=>{for(var r in t||(t={}))x.call(t,r)&&l(e,r,t[r]);if(p)for(var r of p(t))R.call(t,r)&&l(e,r,t[r]);return e},d=(e,t)=>g(e,_(t));import{an as s,a,n as b,ae as m,C as y,dh as I,w as u,r as h}from"./vendor.c414a8c9.js";import N from"./FeatureLayerView2D.1ba52a99.js";import{e as w}from"./util.dfab6411.js";import"./utils.26cfa974.js";import"./Utils.d29fb889.js";import"./enums.6e42a319.js";import"./enums.de935fa5.js";import"./Texture.21608732.js";import"./VertexElementDescriptor.d386088d.js";import"./MaterialKey.003e1aef.js";import"./LayerView.da2fde64.js";import"./schemaUtils.48f0e3c8.js";import"./visualVariablesUtils.f6ff214d.js";import"./createSymbolSchema.7c9fbeea.js";import"./CIMSymbolHelper.cef2d21f.js";import"./BidiEngine.ec67919b.js";import"./GeometryUtils.814cb798.js";import"./ExpandedCIM.13be576b.js";import"./quantizationUtils.2450b4c7.js";import"./MD5.97b39efc.js";import"./floorFilterUtils.69500d62.js";import"./popupUtils.79cbcb0c.js";import"./RefreshableLayerView.909741ab.js";function f(e,t){if(u(e)&&u(t))return null;const r={};return h(t)&&(r.geometry=t.toJSON()),h(e)&&(r.where=e),r}let o=class extends N{constructor(){super(...arguments),this._enabledDataReceived=!1,this.errorString=null,this.connectionStatus="disconnected"}initialize(){this.handles.add([m(()=>{var e;return(e=this.layer)==null?void 0:e.purgeOptions},()=>this._update()),m(()=>this.suspended,e=>{e?this._proxy.pauseStream():this._proxy.resumeStream()})])}get connectionError(){if(this.errorString)return new y("stream-controller",this.errorString)}on(e,t){e==="data-received"&&(this._enabledDataReceived=!0,this._proxy.enableEvent("data-received",!0));const r=super.on(e,t),i=this;return{remove(){r.remove(),e==="data-received"&&(i._proxy.closed||i.hasEventListener("data-received")||i._proxy.enableEvent("data-received",!1))}}}queryLatestObservations(e,t){if(!(this.layer.timeInfo.endField||this.layer.timeInfo.startField))throw new y("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(r=>{const i=I.fromJSON(r);return i.features.forEach(n=>{n.layer=this.layer,n.sourceLayer=this.layer}),i})}detach(){super.detach(),this.connectionStatus="disconnected"}_createClientOptions(){return d(c({},super._createClientOptions()),{setProperty:e=>{this.set(e.propertyName,e.value)}})}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(f(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map(O=>O.toJSON()),i=w(e.geometryType),n=e.timeInfo&&e.timeInfo.toJSON()||null,v=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",fields:r,geometryType:i,objectIdField:t,timeInfo:n,source:this.layer.parsedUrl,serviceFilter:f(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enableDataReceived:this._enabledDataReceived,spatialReference:v,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};s([a()],o.prototype,"errorString",void 0),s([a({readOnly:!0})],o.prototype,"connectionError",null),s([a()],o.prototype,"connectionStatus",void 0),o=s([b("esri.views.2d.layers.StreamLayerView2D")],o);const Y=o;export{Y as default};
