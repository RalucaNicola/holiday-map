import{cC as _,gq as $,cO as G,cb as N,w as R,gw as O,gx as B,bB as b,ga as w,aW as p,r as J,aR as P,aS as g,gy as Z,gz as y,aT as v,gA as x,gB as z}from"./vendor.c414a8c9.js";import{f as F,g as M}from"./projectionSupport.441f613a.js";const j=new _({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"}),h=Object.freeze({}),d=new p,k=new p,S=new p,m={esriGeometryPoint:y,esriGeometryPolyline:v,esriGeometryPolygon:x,esriGeometryMultipoint:z};function K(t,r,a,n=t.hasZ,i=t.hasM){if(R(r))return null;const o=t.hasZ&&n,s=t.hasM&&i;if(a){const e=g(S,r,t.hasZ,t.hasM,"esriGeometryPoint",a,n,i);return y(e,o,s)}return y(r,o,s)}function T(t,r,a,n,i,o,s=r,e=a){const l=r&&s,u=a&&e,f=J(n)?"coords"in n?n:n.geometry:null;if(R(f))return null;if(i){let c=P(k,f,r,a,t,i,s,e);return o&&(c=g(S,c,l,u,t,o)),m[t](c,l,u)}if(o){const c=g(S,f,r,a,t,o,s,e);return m[t](c,l,u)}return Z(d,f,r,a,s,e),m[t](d,l,u)}async function V(t,r,a){const{outFields:n,orderByFields:i,groupByFieldsForStatistics:o,outStatistics:s}=t;if(n)for(let e=0;e<n.length;e++)n[e]=n[e].trim();if(i)for(let e=0;e<i.length;e++)i[e]=i[e].trim();if(o)for(let e=0;e<o.length;e++)o[e]=o[e].trim();if(s)for(let e=0;e<s.length;e++)s[e].onStatisticField&&(s[e].onStatisticField=s[e].onStatisticField.trim());return t.geometry&&!t.outSR&&(t.outSR=t.geometry.spatialReference),A(t,r,a)}async function A(t,r,a){if(!t)return null;let{where:n}=t;if(t.where=n=n&&n.trim(),(!n||/^1 *= *1$/.test(n)||r&&r===n)&&(t.where=null),!t.geometry)return t;let i=await C(t);if(t.distance=0,t.units=null,t.spatialRel==="esriSpatialRelEnvelopeIntersects"){const{spatialReference:l}=t.geometry;i=$(i),i.spatialReference=l}t.geometry=i,await F(i.spatialReference,a);const o=(await G(N(i)))[0];if(R(o))throw h;const s=o.toJSON(),e=await M(s,s.spatialReference,a);if(!e)throw h;return e.spatialReference=a,t.geometry=e,t}async function C(t){const{geometry:r,distance:a,units:n}=t;if(a==null||"vertexAttributes"in r)return r;const i=r.spatialReference,o=n?j.fromJSON(n):O(i),s=i&&(B(i)||b(i))?r:await F(i,w).then(()=>M(r,w));return(await L())(s.spatialReference,s,a,o)}async function L(){return(await import("./geometryEngineJSON.55e81d9a.js")).geodesicBuffer}function W(t){return t&&U in t?JSON.parse(JSON.stringify(t,q)):t}const U="_geVersion",q=(t,r)=>t!==U?r:void 0;export{T as J,K as O,V as P,h as U,A as v,W as x};
